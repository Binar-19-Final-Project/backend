// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Role {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("roles")
}

model User {
  id           Int           @id @default(autoincrement())
  uuid         String        @default(uuid())
  name         String
  email        String        @unique
  phone        Int           @unique
  password     String
  resetToken   String?       @db.Text @map("reset_token")
  roleId       Int           @map("role_id")
  verified     Boolean       @default(false)
  photoProfile PhotoProfile?
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")

  @@map("users")
}

model PhotoProfile {
  id        Int      @id @default(autoincrement())
  urlPhoto  String   @map("url_photo")
  userId    Int      @unique @map("user_id")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("photo_profiles")
}

model CourseCategory {
  id          Int      @id @default(autoincrement())
  name        String
  slug        String   @unique
  course      Course[]
  isPublished Boolean  @default(true) @map("is_published")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("course_categories")
}

model CourseType {
  id        Int      @id @default(autoincrement())
  name      String
  course    Course[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("course_types")
}

model CourseLevel {
  id        Int      @id @default(autoincrement())
  name      String
  course    Course[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("course_levels")
}

model CourseInstructor {
  id        Int      @id @default(autoincrement())
  name      String
  course    Course[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("course_instructors")
}

model CoursePromo {
  id          Int      @id @default(autoincrement())
  name        String
  discount    Float
  expiredAt   DateTime @map("expired_at")
  course      Course[]
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("course_promos")
}

model Course {
  id               Int              @id @default(autoincrement())
  title            String
  slug             String           @unique
  description      String           @db.Text
  price            Float
  rating           Float
  instructorId     Int              @map("course_instructor_id")
  instructor       CourseInstructor @relation(fields: [instructorId], references: [id], onDelete: Cascade)
  courseTypeId     Int              @map("course_type_id")
  courseType       CourseType       @relation(fields: [courseTypeId], references: [id], onDelete: Cascade)
  courseCategoryId Int              @map("course_category_id")
  courseCategory   CourseCategory   @relation(fields: [courseCategoryId], references: [id], onDelete: Cascade)
  courseLevelId    Int              @map("course_level_id")
  courseLevel      CourseLevel      @relation(fields: [courseLevelId], references: [id], onDelete: Cascade)
  coursePromoId    Int?             @map("course_promo_id")
  coursePromo      CoursePromo?     @relation(fields: [coursePromoId], references: [id], onDelete: Cascade)
  isPromo          Boolean          @default(false) @map("is_promo")
  isPublished      Boolean          @default(true) @map("is_published")
  createdAt        DateTime         @default(now()) @map("created_at")
  updatedAt        DateTime         @updatedAt @map("updated_at")

  @@map("courses")
}
